%% wxlearningsequence
 % Runs the learning sequence for a given side of the T-maze
 % JL Alatorre-Warren
 
function [daqDevice, ...
          daqSession, ...
          mainLogbook, ...
          sequenceOfSides, ...
          startTimeForcedRun, ...
          endTimeForcedRun, ...
          startTimeFreeRun, ...
          endTimeFreeRun] = wxlearningsequence(sequenceOfSides, ...
                                                mainLogbook, ...
                                                currentSide, ...
                                                counterOfRuns, ...
                                                cameraNumber, ...
                                                daqDevice, ...
                                                daqSession, ...
                                                roi01, ...
                                                roi02, ...
                                                roi03, ...
                                                roi04, ...
                                                secondsInsideStartBoxAfterForcedRun, ...
                                                secondsInsideStartBoxAfterFreeRun, ...
                                                optionWhiteNoiseInsideStartBoxAfterForcedRun, ...
                                                optionWhiteNoiseInsideStartBoxAfterFreeRun, ...   
                                                optionUseStartGateAfterFreeingTheMouse, ...
                                                optionLickToOpenValve)
                                                    
% Shaping sequence
[daqDevice, ...
 daqSession, ...
 mainLogbook, ...
 startTimeForcedRun, ...
 endTimeForcedRun] = wxshapingsequence(currentSide, ...
                                       cameraNumber, ...
                                       mainLogbook,...
                                       daqDevice, ...
                                       daqSession, ...
                                       roi01, ...
                                       roi02, ...
                                       secondsInsideStartBoxAfterForcedRun, ...
                                       optionWhiteNoiseInsideStartBoxAfterForcedRun, ...                                  
                                       optionUseStartGateAfterFreeingTheMouse, ...                                                
                                       optionLickToOpenValve);

% Get timestamp: start of free run
startTimeFreeRun = clock;
                                     
% Open all gates
mainLogbook = wxservo('right','open',mainLogbook);
mainLogbook = wxservo('left', 'open',mainLogbook);
mainLogbook = wxservo('start','open',mainLogbook);
                                          
% Detect mouse in ROI02 (main corridor)
mainLogbook = wxroidetection(cameraNumber,roi02,'roi02',mainLogbook);

% Close start gate if optionIgnoreStartGateAfterFreeingTheMouse is 0
if optionUseStartGateAfterFreeingTheMouse == 1
  mainLogbook = wxservo('start','close',mainLogbook);
end

% Detect mouse in either the right (ROI03) or the left (ROI04) arms 
[detectedSide, ...
 mainLogbook] = wxtworoisdetection(cameraNumber, ...
                                   mainLogbook, ...
                                   roi03, ...
                                   roi04);
                          
% Evaluate mouse (and reward if he chooses the correct side)
[daqDevice, ...
 daqSession, ...
 mainLogbook] = wxevaluatemouse(currentSide, ...
                                detectedSide, ...
                                mainLogbook, ...
                                daqDevice, ...
                                daqSession, ...
                                optionLickToOpenValve);
                                        
% Open start gate if optionIgnoreStartGateAfterFreeingTheMouse is 0
if optionUseStartGateAfterFreeingTheMouse == 1
  mainLogbook = wxservo('start','open',mainLogbook);
end

% Detect mouse in ROI02 (main corridor)
mainLogbook = wxroidetection(cameraNumber,roi02,'roi02',mainLogbook);

% Close the gate of the current arm side
mainLogbook = wxservo(detectedSide,'close',mainLogbook);
                                        
% Detect mouse in ROI01 (start box)
mainLogbook = wxroidetection(cameraNumber,roi01,'roi01',mainLogbook);

% Close all gates
mainLogbook = wxservo('start','close',mainLogbook);
mainLogbook = wxservo('right','close',mainLogbook);
mainLogbook = wxservo('left', 'close',mainLogbook);

% Get timestamp: end of free run
endTimeFreeRun = clock;

% Update sequence of mouse choices
sequenceOfSides = wxupdatemousechoices(sequenceOfSides, ...
                                       counterOfRuns, ...
                                       detectedSide);

% Keep the mouse inside the start box and play white noise in the speakers
wxdelayperiod(secondsInsideStartBoxAfterFreeRun,optionWhiteNoiseInsideStartBoxAfterFreeRun);